

import UIKit
import Photos

class ViewController: UIViewController {
    
    @IBOutlet fileprivate var captureButton: UIButton!
    @IBOutlet var currentImage: UIImageView!
    
    @IBOutlet weak var MiniCurrentImage: UIImageView!
    ///Displays a preview of the video output generated by the device's cameras.
    @IBOutlet fileprivate var capturePreviewView: UIView!
    
    ///Allows the user to put the camera in photo mode.
    @IBOutlet fileprivate var photoModeButton: UIButton!
    @IBOutlet fileprivate var toggleCameraButton: UIButton!
    @IBOutlet fileprivate var toggleFlashButton: UIButton!
    
    ///Allows the user to put the camera in video mode.
    @IBOutlet fileprivate var videoModeButton: UIButton!
    @IBOutlet weak var collectionView: UICollectionView!
    
    @IBAction func ImageCurrentView(_ sender: Any) {
        self.performSegue(withIdentifier: "ImageView", sender: nil)
    }
    
    @IBAction func backDidTapped(_ sender: UIButton) {
        self.dismiss(animated: true, completion: nil)
    }
    
    let cameraController = CameraController()
    
    override var prefersStatusBarHidden: Bool { return true }
    
}

extension ViewController {
    override func viewDidLoad() {
        
//        self.collectionView.delegate = self
//        self.collectionView.dataSource = self
        styleCaptureButton()
        configureCameraController()
        
        self.setupImage()
        self.view.addSubview(self.currentImage)
        self.view.addSubview(self.MiniCurrentImage)
        
        //let layout =
    }
    
    func styleCaptureButton() {
        captureButton.layer.borderColor = UIColor.red.cgColor
        captureButton.layer.borderWidth = 2
        
        captureButton.layer.cornerRadius = min(captureButton.frame.width, captureButton.frame.height) / 2
    }
    
    func configureCameraController() {
        cameraController.prepare {(error) in
            if let error = error {
                print(error)
            }
            
            try? self.cameraController.displayPreview(on: self.capturePreviewView)
        }
    }
    func setupImage() {
        self.view.layoutIfNeeded()
        self.currentImage.frame = self.capturePreviewView.frame
        self.currentImage.isHidden = true
    }
}

extension ViewController {
    @IBAction func toggleFlash(_ sender: UIButton) {
        if cameraController.flashMode == .on {
            cameraController.flashMode = .off
            toggleFlashButton.setImage(#imageLiteral(resourceName: "Flash Off Icon"), for: .normal)
        }
            
        else {
            cameraController.flashMode = .on
            toggleFlashButton.setImage(#imageLiteral(resourceName: "Flash On Icon"), for: .normal)
        }
    }
    
    @IBAction func switchCameras(_ sender: UIButton) {
        do {
            try cameraController.switchCameras()
        }
            
        catch {
            print(error)
        }
        
        switch cameraController.currentCameraPosition {
        case .some(.front):
            toggleCameraButton.setImage(#imageLiteral(resourceName: "Front Camera Icon"), for: .normal)
            
        case .some(.rear):
            toggleCameraButton.setImage(#imageLiteral(resourceName: "Rear Camera Icon"), for: .normal)
            
        case .none:
            return
        }
    }
    
    @IBAction func captureImage(_ sender: UIButton) {
        self.setupImage()
        cameraController.captureImage {(image, error) in
            guard let image = image else {
                print(error ?? "Image capture error")
                return
            }
            
            try? PHPhotoLibrary.shared().performChangesAndWait {
                self.currentImage.image = image
                self.currentImage.isHidden = false
                UIView.animate(withDuration: 0.2, animations: {
                    let shutterView = UIView(frame: self.capturePreviewView.frame)
                    shutterView.backgroundColor = UIColor.black
                    self.view.addSubview(shutterView)
                    UIView.animate(withDuration: 0.2, animations: {
                        shutterView.alpha = 0
                    }, completion: { (_) in
                        shutterView.removeFromSuperview()
                    })
                }, completion: { (completed) in
                    self.capturePreviewView.backgroundColor = . clear
                    UIView.animate(withDuration: 0.5, animations: {
                        self.currentImage.frame = CGRect(x: self.MiniCurrentImage.frame.origin.x,y: self.MiniCurrentImage.frame.origin.y, width: self.MiniCurrentImage.frame.width, height: self.MiniCurrentImage.frame.height)
                        
                    }, completion: { (_) in
                        self.currentImage.isHidden = true
                        self.MiniCurrentImage.image = self.currentImage.image
                        self.MiniCurrentImage.contentMode = .scaleToFill
                    })
                })
                PHAssetChangeRequest.creationRequestForAsset(from: image)
            }
            
            
        }
    }
    
    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        if segue.identifier == "ImageView" {
            let vc = segue.destination as? ImageViewController
            vc?.ImageCurrent1 = self.MiniCurrentImage.image!
        }
    }
    
}
//MARK: CollectionView Datasource
//extension ViewController : UICollectionViewDataSource {
//    
//    func numberOfSections(in collectionView: UICollectionView) -> Int {
//        return 1
//    }
//    
//    func collectionView(_ collectionView: UICollectionView, numberOfItemsInSection section: Int) -> Int {
//        return self.filterNames.count
//    }
//    
//    func collectionView(_ collectionView: UICollectionView, cellForItemAt indexPath: IndexPath) -> UICollectionViewCell {
//        let cell = collectionView.dequeueReusableCell(withReuseIdentifier: "cell", for: indexPath)
//        
//        let imageView = cell.viewWithTag(100) as! UIImageView
//        
//        imageView.image = UIImage(named: self.filterNames[indexPath.row])
//        
//        if selectedFilterIndex == indexPath.item! {
//            cell.layer.borderColor = UIColor(red: 242/255, green: 120/255, blue: 5/255, alpha: 1).cgColor
//            cell.layer.borderWidth = 2
//        } else {
//            cell.layer.borderColor = UIColor.clear().cgColor
//        }
//        
//        return cell
//    }
//    
//}
//
////MARK: CollectionView Delegate
//extension ViewController: UICollectionViewDelegate {
//    func collectionView(_ collectionView: UICollectionView, didSelectItemAt indexPath: IndexPath) {
//        selectedFilterIndex = indexPath.item!
//        
//        collectionView.reloadData()
//    }
//}



